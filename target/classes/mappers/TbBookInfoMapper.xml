<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sim.dao.TbBookInfoMapper">
  <resultMap id="BaseResultMap" type="com.sim.model.TbBookInfo">
    <constructor>
      <idArg column="bid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="b_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="b_intro" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bid, b_name, b_intro, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.sim.criteria.TbBookInfoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_book_info
    where bid = #{bid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_book_info
    where bid = #{bid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sim.criteria.TbBookInfoCriteria">
    delete from tb_book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sim.model.TbBookInfo">
    insert into tb_book_info (bid, b_name, b_intro, 
      create_time, update_time)
    values (#{bid,jdbcType=INTEGER}, #{bName,jdbcType=VARCHAR}, #{bIntro,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sim.model.TbBookInfo">
    insert into tb_book_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.isSelective()">
          <if test="_parameter.isSelective('bid')">
            bid,
          </if>
          <if test="_parameter.isSelective('b_name')">
            b_name,
          </if>
          <if test="_parameter.isSelective('b_intro')">
            b_intro,
          </if>
          <if test="_parameter.isSelective('create_time')">
            create_time,
          </if>
          <if test="_parameter.isSelective('update_time')">
            update_time,
          </if>
        </when>
        <otherwise>
          <if test="bid != null">
            bid,
          </if>
          <if test="bName != null">
            b_name,
          </if>
          <if test="bIntro != null">
            b_intro,
          </if>
          <if test="createTime != null">
            create_time,
          </if>
          <if test="updateTime != null">
            update_time,
          </if>
        </otherwise>
      </choose>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.isSelective()">
          <if test="_parameter.isSelective('bid')">
            #{bid,jdbcType=INTEGER},
          </if>
          <if test="_parameter.isSelective('bName')">
            #{bName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.isSelective('bIntro')">
            #{bIntro,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.isSelective('createTime')">
            #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.isSelective('updateTime')">
            #{updateTime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="bid != null">
            #{bid,jdbcType=INTEGER},
          </if>
          <if test="bName != null">
            #{bName,jdbcType=VARCHAR},
          </if>
          <if test="bIntro != null">
            #{bIntro,jdbcType=VARCHAR},
          </if>
          <if test="createTime != null">
            #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="updateTime != null">
            #{updateTime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sim.criteria.TbBookInfoCriteria" resultType="java.lang.Long">
    select count(*) from tb_book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_book_info
    <set>
      <choose>
        <when test="record.isSelective()">
          <if test="record.isSelective('bid')">
            bid = #{record.bid,jdbcType=INTEGER},
          </if>
          <if test="record.isSelective('b_name')">
            b_name = #{record.bName,jdbcType=VARCHAR},
          </if>
          <if test="record.isSelective('b_intro')">
            b_intro = #{record.bIntro,jdbcType=VARCHAR},
          </if>
          <if test="record.isSelective('create_time')">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.isSelective('update_time')">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="record.bid != null">
            bid = #{record.bid,jdbcType=INTEGER},
          </if>
          <if test="record.bName != null">
            b_name = #{record.bName,jdbcType=VARCHAR},
          </if>
          <if test="record.bIntro != null">
            b_intro = #{record.bIntro,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_book_info
    set bid = #{record.bid,jdbcType=INTEGER},
      b_name = #{record.bName,jdbcType=VARCHAR},
      b_intro = #{record.bIntro,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sim.model.TbBookInfo">
    update tb_book_info
    <set>
      <choose>
        <when test="_parameter.isSelective()">
          <if test="_parameter.isSelective('b_name')">
            b_name = #{bName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.isSelective('b_intro')">
            b_intro = #{bIntro,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.isSelective('create_time')">
            create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.isSelective('update_time')">
            update_time = #{updateTime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="bName != null">
            b_name = #{bName,jdbcType=VARCHAR},
          </if>
          <if test="bIntro != null">
            b_intro = #{bIntro,jdbcType=VARCHAR},
          </if>
          <if test="createTime != null">
            create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="updateTime != null">
            update_time = #{updateTime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </set>
    where bid = #{bid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sim.model.TbBookInfo">
    update tb_book_info
    set b_name = #{bName,jdbcType=VARCHAR},
      b_intro = #{bIntro,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where bid = #{bid,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.sim.criteria.TbBookInfoCriteria" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_book_info
    (bid, b_name, b_intro, create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.bid,jdbcType=INTEGER}, #{item.bName,jdbcType=VARCHAR}, #{item.bIntro,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_book_info (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'bid' == column.value">
          #{item.bid,jdbcType=INTEGER}
        </if>
        <if test="'b_name' == column.value">
          #{item.bName,jdbcType=VARCHAR}
        </if>
        <if test="'b_intro' == column.value">
          #{item.bIntro,jdbcType=VARCHAR}
        </if>
        <if test="'create_time' == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time' == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsert" parameterType="com.sim.model.TbBookInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_book_info
    (bid, b_name, b_intro, create_time, update_time)
    values
    (#{bid,jdbcType=INTEGER}, #{bName,jdbcType=VARCHAR}, #{bIntro,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    on duplicate key update 
    bid = #{bid,jdbcType=INTEGER}, b_name = #{bName,jdbcType=VARCHAR}, b_intro = #{bIntro,jdbcType=VARCHAR}, create_time = #{createTime,jdbcType=TIMESTAMP}, update_time = #{updateTime,jdbcType=TIMESTAMP}
  </insert>
  <insert id="upsertSelective" parameterType="com.sim.model.TbBookInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_book_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.isSelective()">
          <if test="_parameter.isSelective('bid')">
            bid,
          </if>
          <if test="_parameter.isSelective('b_name')">
            b_name,
          </if>
          <if test="_parameter.isSelective('b_intro')">
            b_intro,
          </if>
          <if test="_parameter.isSelective('create_time')">
            create_time,
          </if>
          <if test="_parameter.isSelective('update_time')">
            update_time,
          </if>
        </when>
        <otherwise>
          <if test="bid != null">
            bid,
          </if>
          <if test="bName != null">
            b_name,
          </if>
          <if test="bIntro != null">
            b_intro,
          </if>
          <if test="createTime != null">
            create_time,
          </if>
          <if test="updateTime != null">
            update_time,
          </if>
        </otherwise>
      </choose>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.isSelective()">
          <if test="_parameter.isSelective('bid')">
            #{bid,jdbcType=INTEGER},
          </if>
          <if test="_parameter.isSelective('bName')">
            #{bName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.isSelective('bIntro')">
            #{bIntro,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.isSelective('createTime')">
            #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.isSelective('updateTime')">
            #{updateTime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="bid != null">
            #{bid,jdbcType=INTEGER},
          </if>
          <if test="bName != null">
            #{bName,jdbcType=VARCHAR},
          </if>
          <if test="bIntro != null">
            #{bIntro,jdbcType=VARCHAR},
          </if>
          <if test="createTime != null">
            #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="updateTime != null">
            #{updateTime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <choose>
        <when test="_parameter.isSelective()">
          <if test="_parameter.isSelective('bid')">
            bid = #{bid,jdbcType=INTEGER},
          </if>
          <if test="_parameter.isSelective('b_name')">
            b_name = #{bName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.isSelective('b_intro')">
            b_intro = #{bIntro,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.isSelective('create_time')">
            create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.isSelective('update_time')">
            update_time = #{updateTime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="bid != null">
            bid = #{bid,jdbcType=INTEGER},
          </if>
          <if test="bName != null">
            b_name = #{bName,jdbcType=VARCHAR},
          </if>
          <if test="bIntro != null">
            b_intro = #{bIntro,jdbcType=VARCHAR},
          </if>
          <if test="createTime != null">
            create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="updateTime != null">
            update_time = #{updateTime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
  <insert id="upsertByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_book_info
    (bid, b_name, b_intro, create_time, update_time)
    select
    #{record.bid,jdbcType=INTEGER}, #{record.bName,jdbcType=VARCHAR}, #{record.bIntro,jdbcType=VARCHAR}, #{record.createTime,jdbcType=TIMESTAMP}, #{record.updateTime,jdbcType=TIMESTAMP}
    from dual where not exists
    (
    select 1 from tb_book_info
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )
    ;
    update tb_book_info
    set
    bid = #{record.bid,jdbcType=INTEGER}, b_name = #{record.bName,jdbcType=VARCHAR}, b_intro = #{record.bIntro,jdbcType=VARCHAR}, create_time = #{record.createTime,jdbcType=TIMESTAMP}, update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </insert>
  <insert id="upsertByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_book_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="record.isSelective()">
          <if test="record.isSelective('bid')">
            bid,
          </if>
          <if test="record.isSelective('b_name')">
            b_name,
          </if>
          <if test="record.isSelective('b_intro')">
            b_intro,
          </if>
          <if test="record.isSelective('create_time')">
            create_time,
          </if>
          <if test="record.isSelective('update_time')">
            update_time,
          </if>
        </when>
        <otherwise>
          <if test="record.bid != null">
            bid,
          </if>
          <if test="record.bName != null">
            b_name,
          </if>
          <if test="record.bIntro != null">
            b_intro,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
        </otherwise>
      </choose>
    </trim>
    select
    <trim suffixOverrides=",">
      <choose>
        <when test="record.isSelective()">
          <if test="record.isSelective('bid')">
            #{record.bid,jdbcType=INTEGER},
          </if>
          <if test="record.isSelective('b_name')">
            #{record.bName,jdbcType=VARCHAR},
          </if>
          <if test="record.isSelective('b_intro')">
            #{record.bIntro,jdbcType=VARCHAR},
          </if>
          <if test="record.isSelective('create_time')">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.isSelective('update_time')">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="record.bid != null">
            #{record.bid,jdbcType=INTEGER},
          </if>
          <if test="record.bName != null">
            #{record.bName,jdbcType=VARCHAR},
          </if>
          <if test="record.bIntro != null">
            #{record.bIntro,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </trim>
    from dual where not exists
    (
    select 1 from tb_book_info
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )
    ;
    update tb_book_info
    set
    <trim suffixOverrides=",">
      <if test="record.bid != null">
        bid = #{record.bid,jdbcType=INTEGER},
      </if>
      <if test="record.bName != null">
        b_name = #{record.bName,jdbcType=VARCHAR},
      </if>
      <if test="record.bIntro != null">
        b_intro = #{record.bIntro,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </insert>
</mapper>